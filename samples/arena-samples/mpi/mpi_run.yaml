apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: pipeline-to-run-mpi-job-
spec:
  arguments:
    parameters:
    - name: image
      value: uber/horovod:0.13.11-tf1.10.0-torch0.4.0-py3.5
    - name: batch-size
      value: '64'
    - name: optimizer
      value: momentum
    - name: sync-source
      value: https://github.com/tensorflow/benchmarks.git
    - name: git-sync-branch
      value: cnn_tf_v1.9_compatible
    - name: data
      value: user-susan:/training
    - name: gpus
      value: '1'
    - name: workers
      value: '1'
    - name: cpu-limit
      value: '2'
    - name: metric
      value: images/sec
    - name: memory-limit
      value: 10Gi
  entrypoint: pipeline-to-run-mpi-job
  serviceAccountName: pipeline-runner
  templates:
  - container:
      args:
      - --name
      - all-reduce
      - --tensorboard
      - 'False'
      - --rdma
      - 'False'
      - --image
      - '{{inputs.parameters.image}}'
      - --gpus
      - '{{inputs.parameters.gpus}}'
      - --cpu
      - '{{inputs.parameters.cpu-limit}}'
      - --memory
      - '{{inputs.parameters.memory-limit}}'
      - --step-name
      - '{{pod.name}}'
      - --workflow-name
      - '{{workflow.name}}'
      - --workers
      - '{{inputs.parameters.workers}}'
      - --timeout-hours
      - '240'
      - --sync-source
      - '{{inputs.parameters.sync-source}}'
      - --env
      - NCCL_DEBUG=INFO
      - --env
      - GIT_SYNC_BRANCH={{inputs.parameters.git-sync-branch}}
      - --data
      - '{{inputs.parameters.data}}'
      - --metric
      - '{{inputs.parameters.metric}}'
      - mpijob
      - --
      - "\n  \tmpirun python code/benchmarks/scripts/tf_cnn_benchmarks/tf_cnn_benchmarks.py\
        \ --model resnet101   \t--batch_size {{inputs.parameters.batch-size}}  --variable_update\
        \ horovod --optimizer {{inputs.parameters.optimizer}}  \t--summary_verbosity=3\
        \ --save_summaries_steps=10\n  \t"
      command:
      - python
      - arena_launcher.py
      image: cheyang/arena_launcher:v0.7
      imagePullPolicy: Always
    inputs:
      parameters:
      - name: batch-size
      - name: cpu-limit
      - name: data
      - name: git-sync-branch
      - name: gpus
      - name: image
      - name: memory-limit
      - name: metric
      - name: optimizer
      - name: sync-source
      - name: workers
    name: all-reduce
    outputs:
      artifacts:
      - name: mlpipeline-ui-metadata
        path: /mlpipeline-ui-metadata.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: minio-service.kubeflow:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-ui-metadata.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
      - name: mlpipeline-metrics
        path: /mlpipeline-metrics.json
        s3:
          accessKeySecret:
            key: accesskey
            name: mlpipeline-minio-artifact
          bucket: mlpipeline
          endpoint: minio-service.kubeflow:9000
          insecure: true
          key: runs/{{workflow.uid}}/{{pod.name}}/mlpipeline-metrics.tgz
          secretKeySecret:
            key: secretkey
            name: mlpipeline-minio-artifact
      parameters:
      - name: all-reduce-name
        valueFrom:
          path: /name.txt
      - name: all-reduce-step
        valueFrom:
          path: /step-name.txt
      - name: all-reduce-train
        valueFrom:
          path: /output.txt
      - name: all-reduce-workflow
        valueFrom:
          path: /workflow-name.txt
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: batch-size
            value: '{{inputs.parameters.batch-size}}'
          - name: cpu-limit
            value: '{{inputs.parameters.cpu-limit}}'
          - name: data
            value: '{{inputs.parameters.data}}'
          - name: git-sync-branch
            value: '{{inputs.parameters.git-sync-branch}}'
          - name: gpus
            value: '{{inputs.parameters.gpus}}'
          - name: image
            value: '{{inputs.parameters.image}}'
          - name: memory-limit
            value: '{{inputs.parameters.memory-limit}}'
          - name: metric
            value: '{{inputs.parameters.metric}}'
          - name: optimizer
            value: '{{inputs.parameters.optimizer}}'
          - name: sync-source
            value: '{{inputs.parameters.sync-source}}'
          - name: workers
            value: '{{inputs.parameters.workers}}'
        name: all-reduce
        template: all-reduce
    inputs:
      parameters:
      - name: batch-size
      - name: cpu-limit
      - name: data
      - name: git-sync-branch
      - name: gpus
      - name: image
      - name: memory-limit
      - name: metric
      - name: optimizer
      - name: sync-source
      - name: workers
    name: pipeline-to-run-mpi-job
